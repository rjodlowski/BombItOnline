------------ WORK DIVISION --------------
Rafał:
	Making game playable for two

Bartek:
	Find models of:
		players,
		bombs,
		destructable fields,
	Textures:
		walls,
		floor,
		light (optional - can be a wireframed geometry or invisible)
	Render player on the board after receiving data from server
	Collisions - player collides with:
		- indestructible walls
		- obstacles
		- bombs from outside
			player places a bomb, which spawns on top of him
			he can then walk away from that field (which has a player and a bomb on it)
			but he can not come back into the field, where a bomb is (walk inside the bomb)


-------------- THOUGHTS------------------
1) Game creation has to be based on classes
	- easier player moving
		class objects manipulation (not a string) -- Preparation done

2) Player moves are registered every time they step on a new field
	- find out if field index changes 
		as player crosses the GridHelper's field line
	- player can move freely, smoothly, he doesn't tp between positions
	- animation of moving player played after receiving info from server, 
		that oppiste player moved (same with bombs)

2b) Players phisically added after they've logged in
	- returning player string from the server
	  ^	  based on that string we generate a player in threejs (starting position)
	  |
	already done

2c) #optional - We can add player info -> some rectangle in the corner of a screen
		showing player details 
		(mainly name + optionally logout button #uselessExtas)

3) ajaxes sent every time player moves to the next field
	position updated on server


4) window with loading circle when u join and u alone (pepposad) before ur enemy join tho
	sending info to player that someone join


5) Robimy interwał, który czeka na dodanie drugiego playersa do gry

robimy ajaxy, które updatują pozycję playersów i bomb w tablicy na serwerze 
w interwałowym ajaxie zwracana jest tablica z serwera 
lecimy po niej od 1 do 9 (bez zewnętrznych ścian) i sprawdzamy numerki
jeżeli jest 0, (puste pole) pomijanmy
jeżeli jest 1, (ściana) to pomijamy 
jeżeli jest 2, (obstacle) to pomijamy 
jeżeli jest 3 (bomba) to dodajemy bombę w timerem w danym miejscu
	przy wybuchu jest są rozbijane ściany w promieniu ileśtam
	wysyłamy na serwer pozycje rozbitych ścian oraz bomby -- /destroy
	ustawiamy te pozycje na 0

	przy ajaxie bomby przesuwamy playera tak, żeby cały czas był na planszy ?? #idea

4, 5 - numerki playersów
inne numerki na każdego playera - assigned przy kreowaniu na serwerze
	i wtedy jeżeli jest to localPlayerNumber, to pomijamy,
	jeżeli jest to gracz przeciwny, przesuwamy go na pola z tabeli
	math.floor do updatu pozycji przy przemieszczaniu się

najpierw jest interwał na pobranie drugiego playersa, 
jeżeli zostanie pobrany, to odpalany jest gameUpdateInterval
przypisuje tablicę z serwera do game.gameDataFromServ,
w done leci update planszy z powyższym podziałem na numerki
